* {
    padding: 0;
    margin: 0;
}

body {
    font-family: sans-serif;
    position: fixed;
    right: 0;
    left: 0;
    background-color: aqua;
}

.container {
    display: flex;
    align-items: center;
    padding: 0;
    margin: auto;
    height: 100vh;
}

.textFrame {
    z-index: 8;
    padding: 32px;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-content: center;
}

#inputTitle,
#inputText {
    text-align: center;
    padding-top: 4px;
    padding-bottom: 4px;
    border-radius: 8px;
}

#inputTitle:hover,
#inputText:hover,
#inputTitle:active,
#inputText:active {
    background-color: rgba(0, 0, 0, 0.05);
    outline-color: rgba(0, 0, 0, 0.2);
    -webkit-focus-ring-color: rgba(0, 0, 0, 0.2);
}

#inputTitle {
    font-size: 40px;
    font-weight: bold;
    padding: 16px 0px;
}

#inputText {
    font-size: 32px;
    padding: 16px 0px;
}

.icons {
    width: 40px;
    height: 40px;
}

.content {
    font-size: 32px;
    color: white;
    width: 100%;
    padding: 2em;
    word-wrap: break-word;
    -webkit-nbsp-mode: space;
}


.download {
    background-color: hsla(0, 0%, 0%, 0.2);
    align-items: center;
    justify-items: center;
    padding: 12px;
    border-radius: 24px;
}


.labelBtn {
    padding: 16px 0px;
}


.sep {
    height: 16px;
    width: 1px;
    background-color: black;
    opacity: 0.5;
}


button {
    font-size: 12px;
    z-index: 80;
    display: flex;
    font-weight: bold;
    line-height: 1em;
    position: relative;
    border: none;
    vertical-align: middle;
    margin-right: 8px;
    color: black;
    transition: all .3s;
    transition: background-color .25s;
    cursor: pointer;
    background: rgba(196, 196, 196, 0);
    -webkit-backdrop-filter: blur(16px);
}

button:hover {
    transform: scale(1.05);
}

button:active {
    transform: scale(0.98);
}


.bottom-view {
    position: absolute;
    bottom: 32px;
    left: 16px;
    z-index: 200;
    right: 16px;
    background-color: none;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    
   
    

}


.watermark {
    z-index: 220;
    font-size: 0.6em;
    padding: 6px;
    border-radius: 2px;
    padding-right: 8px;
    background-color: rgba(245, 245, 245, 0.2);
    position: fixed;
    right: 0;
    bottom: 0;
}


.commands {
    background: hsla(0, 0%, 100%, 0.366);
    box-shadow: 0px 8px 8px -8px rgba(0, 0, 0, 0.25);
    backdrop-filter: blur(8px);
    flex-direction: column;
    width: 320px;
    align-items: center;
    border-radius: 64px;
    transition: all .3s;
}

.commands:hover {
    transform: scale(1.05);
}

.controls {
    gap: 16px;
    padding: 32px;
    align-items: center;
    justify-content: space-evenly;
    display: flex;
    width: 256px;
    /* Note: backdrop-filter has minimal browser support */
    
    
    }


.info {
    position: absolute;
    font-size: .75em;
    bottom: 8px;
    left: 0;
    right: 0;
    padding-bottom: 0;
    text-align: center;
    justify-content: center;
    opacity: 50%;
}





.aborder {
    /* box-shadow:0px 0px 0px 1.5px black inset; */
    border-radius: 24px;
    border: 4px solid black;

}

.mt-4 {
    margin-top: -32px;
}

.menu-1 {
    display: block;
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1));
    border-radius: 200px;
    border-width: 0px;
    padding: 12px;
}

.hidden {
    display: none;
}

[contenteditable=true]:empty:before {
    content: attr(placeholder);
    opacity: 0.5;
    pointer-events: none;
    text-align: center;
    /* For Firefox */
}

.svg-icon {
    /* Place the icon on the text baseline. */
    position: relative;
    vertical-align: middle;
    height: 32px;
    width: 32px;
    /* Prevent the icon from shrinking inside a flex container. */
    flex-shrink: 0;
    /* Scale the icon to match the font-size of the parent element. */
    /* Let the icon take whatever color the parent has. */
    fill: currentColor;
    /*
     * If the icon is used on a link, which has a color transition,
     * we can also use a transition on the fill value.
    */
    transition: fill .3s;
}